"""empty message

Revision ID: 34b34277de9f
Revises: a86d6fec0597
Create Date: 2024-01-21 21:12:24.519474

"""
import sqlalchemy as sa  # noqa: F401
from alembic import op  # noqa: F401

from db.models.device import Device

# revision identifiers, used by Alembic.
revision = "34b34277de9f"
down_revision = "a86d6fec0597"
branch_labels = None
depends_on = None


def upgrade() -> None:
    connection = op.get_bind()

    rows_to_update = connection.execute(sa.select(Device).where(Device.activated == None)).fetchall()  # noqa: E711

    for row in rows_to_update:
        connection.execute(sa.update(Device).where(Device.id == row.id).values(activated=False))

    rows_to_update = connection.execute(sa.select(Device).where(Device.serial_number == None)).fetchall()  # noqa: E711

    for row in rows_to_update:
        connection.execute(sa.update(Device).where(Device.id == row.id).values(serial_number=f"test{row.id}"))

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("device", "serial_number", existing_type=sa.VARCHAR(), nullable=False, schema="krecik_iot")
    op.alter_column("device", "activated", existing_type=sa.BOOLEAN(), nullable=False, schema="krecik_iot")
    op.create_unique_constraint(None, "device", ["serial_number"], schema="krecik_iot")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "device", schema="krecik_iot", type_="unique")
    op.alter_column("device", "activated", existing_type=sa.BOOLEAN(), nullable=True, schema="krecik_iot")
    op.alter_column("device", "serial_number", existing_type=sa.VARCHAR(), nullable=True, schema="krecik_iot")
    # ### end Alembic commands ###
